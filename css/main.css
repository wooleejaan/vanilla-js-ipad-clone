/* =============== COMMON =============== */
html {
  --color-white: #fff;
  --color-black: #000;
  --color-font: #1d1d1d;
  --color-font-darkgray: #6e6e6e;
  --color-font-middlegray: #B7B7B7;
  --color-font-lightgray: #f5f5f5;
  --color-link: #0071e3;
  --color-link-focus: #81b9f1;
  --color-border: #d2d2d2;
  --color-header: #3a3a3a;
  --color-section: #f5f5f5;
  --color-shadow: rgba(0, 0, 0, 0.4);
}
html.fixed {
  position: fixed;
  /* 스크롤할 내용이 있든 없든 스크롤바는 무조건 뜨도록 */
  overflow-y: scroll;
  /* posa, posf는 너비가 줄어들려고 하기 때문에 width:100%로 잡아줘야 한다. */
  width: 100%;
}
body {
  height: 10000px;
  /* 영문엔 Roboto 먼저 적용하고, 한글은 Roboto가 안 되므로 Noto Sans KR 쓰도록 */
  font-family: "Roboto", "Noto Sans KR", sans-serif;
  /* 기본값이 16px이지만, 명시적으로 폰트사이즈 지정 */
  font-size: 16px;
  /* 줄높이를 1로 고정하도록, 필요한 곳에서만 늘릴 생각이므로 */
  line-height: 1;
  word-break: keep-all;
  color: var(--color-font);
}
a {
  color: var(--color-font);
  text-decoration: none;
}
img {
  display: block;
  user-select: none;
  -webkit-user-drag: none;
}
p {
  /* 
  기본적으로 위에서 body 내에서 줄높이를 1로 지정했지만, 이렇게 하면 문장을 줄바꿈 했을 때는 너무 간격이 좁음. 
  그러므로 문자의 경우 p 태그를 사용하고, p 태그를 사용했다면 줄간격을 좀 더 늘려서 공통 스타일로 잡아둔다. 
  */
  line-height: 1.6;
}
sup {
  margin-right: 6px;
  /* em은 부모 요소에서 상속받은 크기임 1이 100%임 */
  font-size: .7em;
  vertical-align: top;
}

/* =============== COMMON / .INEER =============== */
.inner {
  max-width: 980px;
  margin: 0 auto;
  padding: 0 20px;
  /* inner 내부에서 posa 사용할 애들이 있을 수 있으므로 */
  position: relative;
}

@media (max-width: 1000px) {
  .inner {
    max-width: 692px;
  }
}

/* =============== COMMON / .BTN =============== */
.btn {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 24px;
  /* 내부 여백은 좌우만 10px */
  padding: 0 10px;
  border: none;
  border-radius: 100px;
  outline: none;
  font-size: 11px;
  /* 줄높이는 1배 */
  line-height: 1;
  color: var(--color-white);
  background-color: var(--color-link);
  cursor: pointer;
}
.btn:hover {
  opacity: 0.7;
}
.btn:focus {
  /* offset-x | offset-y | blur-radius | spread-radius | color */
  /* 왜 box-shadow를 사용하냐면, outline보다 제어하기 쉽기 때문임. */
  box-shadow: 0 0 0 4px var(--color-link-focus);
}

/* =============== COMMON / BACKGROUND IMAGE TEXT =============== */
.bgtext {
  /* 혹시 몰라서 가로/세로 너비를 가질 수 있어야 하므로 */
  display: block;
  text-indent: -9999px;
  background-position: center;
  background-repeat: no-repeat;
  /* 요소의 더 짧은 길이에 맞추는 개념 => 범위 안에서 이미지가 잘리지 않도록 하기 위함 */
  background-size: contain;
}

/* =============== COMMON / LINKS =============== */

/* link가 여러 개일 경우 나열해서 정리할 것임 */
.links {
  display: flex;
  justify-content: center;
  /* 아이템 간 사이 간격을 40px로 */
  gap: 40px;
}
/* a 태그에 links 클래스가 있을 경우 */
a.link {
  color: var(--color-link);
  font-size: 19px;
  line-height: 1.3;
}
a.link:hover {
  text-decoration: underline;
}
/* 링크 태그 우측(요소 뒤이므로 after)에 닫는 꺽쇄 모양 */
a.link:after {
  /* 띄어쓰기 + 꺽쇄모양 */
  content: " >";
}

@media (max-width: 740px) {
  .links {
    flex-direction: column;
    /* row일 때는 중심축 정렬을 하면 됐는데, column으로 변경했으니 교차축 정렬을 해줘야 한다. */
    align-items: center;
    gap: 16px;
  }
  a.link {
    font-size: 17px;
  }
}

/* =============== COMMON / Feature =============== */
.feature {
  /* feature 안에 .figures와 infos를 정렬할 거임. */
  /* 이렇게 하고 .figures에서 flex-grow:1을 줘서 .figures 부분 위치를 잡도록 할거임. */
  display: flex;
}

@media (max-width: 740px) {
  .feature {
    flex-direction: column;
  }
}

/* =============== COMMON / Figures =============== */
.figures {
  flex-grow: 1;
  position: relative;
}
.figures figure,
.figures figcaption {
  /* posa를 통해 언제든지 겹쳐질 수 있도록 (위치를 자유롭게 갖도록) */
  position: absolute;
  top: 0;
  left: 0;
}
/* .figures figcaption 내부에는 div를 쓸 수도 있고 다른 걸 쓸 수도 있으므로 전체 선택자 */
.figures figcaption * {
  position: absolute;
  top: 0;
  left: 0;
}

@media (max-width: 740px) {
  .figures {
    display: flex;
    justify-content: center;
  }
  .figures figure {
    /* 주변 요소와 상호작용하도록 즉, 수직으로 쌓을 것이므로 posa를 posr로 초기화 */
    position: relative;
  }
}

/* =============== COMMON / Infos =============== */
.infos {
  display: flex;
  flex-direction: column;
  position: relative;
  /* z-index는 position이 있어야 함. */
  z-index: 1;
}
/* 하이픈(-) 2번 쓰면 BEM 표기법으로 상태를 나타낼 때 */
.infos.infos--center {
  justify-content: center;
}
.infos.infos--end {
  /* 세로방향인 상태에서 아이템을 위에서부터 쌓이므로 end면 아래로 위치시킨다는 의미이다. */
  justify-content: flex-end;
}
/* 상황에 따라 .infos로 묶이지 않고 별도로 .info만 있는 애들도 있으므로 */
.info {
  max-width: 330px;
  margin-bottom: 24px;
  opacity: 0;
  transition: 1s;
  transform: translate(0, 100px);
  /* 애니메이션 효과를 주기 위해 opacity:0으로 시작함. 전환효과 지속시간 1초 */
  /* 그리고 살짝 아래로 내려가 있는 상태에서 시작 */
}
.info.show {
  /* show 클래스가 붙으면 1로 다시 돌아오도록 */
  opacity: 1;
  transform: translate(0, 0);
}
.infos--large .info {
  max-width: 410px;
}
.info .icon {
  width: 100px;
  height: 100px;
  /* 아래,왼쪽을 당겨서 문장과 위치를 맞추기 위해서 */
  margin: 0 0 -15px -30px;
  animation: sprite-icon 3s steps(1) infinite;
  /* 애니메이션 name, duration 그리고 자연지 않도록 보여주기 위해 steps()를 사용하고, 무한 반복하도록 함 */
}
.info .icon.icon--chip {
  background-image: url("../images/sprite_chip.png");
}
.info .icon.icon--faster {
  background-image: url("../images/sprite_faster.png");
}
.info .icon.icon--neural {
  background-image: url("../images/sprite_neural.png");
}
.info .icon.icon--apps {
  background-image: url("../images/sprite_apps.png");
}
.info .icon.icon--battery {
  background-image: url("../images/sprite_battery.png");
}
.info .icon.icon--display {
  background-image: url("../images/sprite_display.png");
}
.info .icon.icon--true-tone {
  background-image: url("../images/sprite_true_tone.png");
}
.info .icon.icon--center-stage {
  background-image: url("../images/sprite_center_stage.png");
}
.info .icon.icon--front-camera {
  background-image: url("../images/sprite_front_camera.png");
}
.info .icon.icon--back-camera {
  background-image: url("../images/sprite_back_camera.png");
}
.info .icon.icon--scan {
  background-image: url("../images/sprite_scan.png");
}
.info .icon.icon--download {
  background-image: url("../images/sprite_download.png");
}
.info .icon.icon--wifi {
  background-image: url("../images/sprite_wifi.png");
}
.info .icon.icon--lte {
  background-image: url("../images/sprite_lte.png");
}
.info .icon.icon--pencil {
  background-image: url("../images/sprite_pencil.png");
}
.info .icon.icon--keyboard {
  background-image: url("../images/sprite_keyboard.png");
}
.info .icon.icon--notes {
  background-image: url("../images/sprite_notes.png");
}
.info .icon.icon--covers {
  background-image: url("../images/sprite_covers.png");
}
.info p {
  font-size: 21.5px;
  font-weight: 600;
  line-height: 1.5;
}
.info a.link {
  /* a 태그는 인라인 요소이므로 여백을 못 갖는다. */
  display: block;
  margin-top: 44px;
  font-size: 19.5px;
}

@media (max-width: 1000px) {
  /* 각 섹션마다 figure의 위치를 조정하고 
  info 영역의 사이즈만 적절히 조정하면 
  normal flow에 의해 자리를 적당히 찾아가게 됨 */
  .info {
    max-width: 230px;
  }
  .infos--large .info {
    max-width: 288px;
  }
  .info .icon {
    transform: scale(.8);
    margin: -30px 0 -24px -32px;
  }
  .info p {
    font-size: 19px;
    line-height: 1.4;
  }
  .info a.link {
    margin-top: 24px;
  }
}

@media (max-width: 740px) {
  .info {
    /* 수직으로 쌓을거니까 max-width를 초기화 */
    max-width: none;
    padding: 0 20px;
  }
  .infos--large .info {
    max-width: none;
  }
  .info a.link {
    font-size: 17px;
  }
}

/* =============== COMMON / Whitebox =============== */
.whitebox {
  max-width: 1386px;
  margin: 0 auto;
  /* 내부여백 (위아래, 좌우) */
  padding: 100px 30px;
  border-radius: 30px;
  box-sizing: border-box;
  background-color: var(--color-white);
}
.whitebox.whitebox--transparent {
  background-color: transparent;
}
.whitebox .icon {
  margin-bottom: 20px;
}
.whitebox h1 {
  font-size: 50px;
  font-weight: 600;
  line-height: 1.3;
}
.whitebox p {
  margin-top: 20px;
  font-size: 19px;
}
.whitebox a.link {
  display: block;
  margin-top: 26px;
}

@media (max-width: 1000px) {
  .whitebox {
    padding: 60px 30px;
  }
  .whitebox .icon {
    width: 44px;
  }
  .whitebox h1 {
    font-size: 36px;
  }
}

@media (max-width: 740px) {
  .whitebox p {
    font-size: 17px;
  }
}

/* =============== HEADER =============== */
header {
  /* header 안에서만 쓰는 변수 선언 */
  --header-height: 44px;
  background-color: var(--color-header);
  position: relative;
  z-index: 9;
  transition: .4s;
}
header .inner {
  /* 단순히 너비가 아니라 최대 너비로 설정하는 이유. 1020px 이하에서는 자동으로 요소의 너비에 맞춰질 수 있도록 */
  max-width: 1020px;
  /* 좌우 여백을 브라우저 자동으로 계산(너비도 있으므로 조건도 충족) */
}
header ul.menu {
  height: var(--header-height);
  display: flex;
  justify-content: space-between;
}
/* 후손선택자( )로만 하면 그 안에 또 있는 li 들이 겹칠 수 있으므로 정확히 자식선택자(>) 사용하기 */
header ul.menu > li {
  display: flex;
  position: relative;
  transition: 0.4s;
}
header ul.menu > li.menu-starter {
  display: none;
}
header ul.menu > li > a {
  /* 좌우 padding 값만 사용한다. */
  padding: 0 10px;
  font-size: 11px;
  display: flex;
  align-items: center;
  color: var(--color-font-lightgray);
  opacity: 0.8;
  text-decoration: none;
}
/* 일치 선택자(.) 다중 선택자(,) */
header ul.menu > li.apple-logo > a,
header ul.menu > li.search-starter > a,
header ul.menu > li.basket-starter > a {
  width: 14px;
  /* -9999px은 대체 텍스트라는 일종의 약속 */
  text-indent: -9999px;
  background-repeat: no-repeat;
  /* 좌우는 가운데 정렬, 위에서 13px */
  background-position: center 13px;
}
header ul.menu > li.apple-logo > a {
  background-image: url("../images/header_apple.svg");
}
header ul.menu > li.search-starter > a {
  background-image: url("../images/header_search.svg");
}
header ul.menu > li.basket-starter > a {
  background-image: url("../images/header_bag.svg");
}
header ul.menu > li > a:hover {
  opacity: 1;
}

/* =============== HEADER / Menu / Basket =============== */
header .basket {
  width: 290px;
  /* 좌우 위아래 */
  padding: 10px 20px;
  border: 1px solid var(--color-border);
  border-radius: 10px;
  /* border 영역까지 포함하도록 해서 width가 290px이 되도록 */
  box-sizing: border-box;
  background-color: var(--color-white);
  /* .basket의 부모 요소는 li.basket-starter이므로 가서 posr 확인해보기 */
  position: absolute;
  /* top: 100%면 부모 높이만큼 내려간다는 의미 */
  top: calc(100% + 4px);
  right: -6px;
  transition: 0.4s;
  visibility: hidden;
  opacity: 0;
}
header .basket.show {
  visibility: visible;
  opacity: 1;
}
header .basket .arrow {
  width: 20px;
  height: 10px;
  /* 사각형을 돌려서 만들고 넘치는 부분을 지우면 뾰족한 부분만 남으므로 */
  overflow: hidden;
  position: absolute;
  top: -10px;
  right: 12px;
}
header .basket .arrow::before {
  content: "";
  width: 12px;
  height: 12px;
  border: 1px solid var(--color-border);
  background-color: var(--color-white);
  transform: rotate(45deg);
  /* x축:0 y축:0 */
  transform-origin: 0 0;
  position: absolute;
  top: 0;
  left: 50%;
}
header .basket .message {
  /* 내부 여백 : 위아래30px 좌우0 */
  padding: 30px 0;
  font-size: 13px;
  color: var(--color-font-darkgray);
  text-align: center;
}
header .basket ul {
  margin-top: 10px;
}
header .basket ul li {
  border-top: 1px solid var(--color-border);
}
header .basket ul li a {
  /* a태그(인라인요소)에 padding 적용하려면 block으로 */
  display: block;
  padding: 14px;
  font-size: 13px;
  color: var(--color-link);
}
header .basket ul li a:hover {
  text-decoration: underline;
}

/* =============== HEADER / Search =============== */
header .search-wrap {
  /* 부모 요소는 header .inner => 여기에 아무것도 없으면 posr 적용하기 */
  position: absolute;
  top: 0;
  left: 0;
  /* position 값이 있으면 가로너비가 최대한 줄어들려고 시도하므로, inner 영역 차지할 수 있게 100% 할당 */
  width: 100%;
  /* display:none으로는 전환효과 자연스럽게 녹여내지 못하므로 */
  visibility: hidden;
  opacity: 0;
  transition: 0.4s;
}
header .search {
  /* 680px 보다는 커질 수 없지만, 그 이하로는 작아질 수 있게 */
  max-width: 680px;
  /* 위아래 0 좌우 auto로 정렬 */
  margin: 0 auto;
  position: relative;
}
header .search .shadow {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* 색상이랑 투명도 같이 적용하려면 rgba */
  background-color: var(--color-shadow);
}
header .search .textfield {
  position: relative;
}
header .search input {
  width: 100%;
  height: var(--header-height);
  /* 좌우만 각각 40px을 넣어서 여기에 아이콘(검색, 삭제 버튼)들이 들어갈거임 */
  padding: 0 40px;
  border: none;
  outline: none;
  box-sizing: border-box;
  background-color: transparent;
  font-size: 17px;
  color: var(--color-white);
}
header .search .search-icon {
  width: 40px;
  height: var(--header-height);
  background-image: url("../images/header_search.svg");
  background-repeat: no-repeat;
  background-position: center;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0.4;
}
header .search .search-closer {
  width: 40px;
  height: var(--header-height);
  background-image: url("../images/header_close.svg");
  background-repeat: no-repeat;
  background-position: center;
  position: absolute;
  top: 0;
  right: 0;
  opacity: 0.4;
  cursor: pointer;
}
header .search .search-closer:hover {
  opacity: 1;
}
header .search .autocompletes {
  width: 100%;
  /* 내부여백 : 위 좌우 아래 */
  padding: 26px 40px 20px;
  /* 좌측상단 우측상단 우측하단 좌측하단 (시계방향) */
  border-radius: 0 0 18px 18px;
  box-sizing: border-box;
  background-color: var(--color-white);
  /* 부모 요소는 .search */
  position: absolute;
  top: var(--header-height);
  left: 0;
}
header .search .autocompletes h3 {
  font-size: 12px;
  color: var(--color-font-darkgray);
  margin-bottom: 12px;
}
header .search .autocompletes ul li a {
  display: block;
  /* 좌우로 오히려 늘어날 수 있게 -값 부여 */
  margin: 0 -14px;
  /* 시계방향 => 위 우 하 좌 (우측만 내부 여백 없도록) */
  padding: 10px 0 10px 30px;
  font-size: 14px;
  cursor: pointer;
}
header .search .autocompletes ul li:hover a {
  background-color: var(--color-section);
  color: var(--color-link);
}
header .clone-menu {
  display: none;
}
/* =============== HEADER / Search Animation =============== */
/* 검색 창 내부 애니메이션(검색창 열리기 전) */
header .search input,
header .search .search-icon,
header .search .autocompletes h3,
header .search .autocompletes li {
  transition: 0.6s;
  /* translate은 이동해주는 함수 => translate(x축 이동값, y축 이동값) */
  /* 일단 우측으로 이동해뒀다가 검색창이 열리면(searching 클래스 붙으면) 다시 뒤로 이동하는 방법으로 */
  transform: translate(100px, 0);
}
header.searching ul.menu > li {
  opacity: 0;
  /* 단순히 사라지는 것 말고도 좀 작아질 수 있게 scale(1)이 기본값임 */
  transform: scale(0.7);
}
header.searching .search-wrap {
  visibility: visible;
  opacity: 1;
  /* 메뉴 목록이 등장하는 애니메이션과 검색창 내부 애니메이션이 동시에 나타나면 애니메이션되는지 모를 수 있으므로 검색창은 딜레이를 좀 더 줘야 한다. */
  /* 대신 이건 나타날 때만 주는 거고, 검색창을 지울 때는 바로 지워야 하므로 딜레이 안주고 여기에만 줬음 */
  transition-delay: 0.2s;
}

/* 검색 창 내부 애니메이션(검색창 열리면) */
header.searching .search input,
header.searching .search .search-icon,
header.searching .search .autocompletes h3,
header.searching .search .autocompletes li {
  transform: translate(0, 0);
  /* 마찬가지로 열려 있을 때는 delay를 주므로, 검색창이 사라질 때는 바로 사라진다. */
  transition-delay: 0.2s;
}

@media (max-width: 1000px) {
  header .inner {
    /* 이 구간에서도 nav 랑 콘텐츠 영역 라인이 맞도록 하기 위해서 여백을 약간 줄였음. */
    padding: 0 10px;
  }
}
@media (max-width: 740px) {
  header::before {
    content: "";
    position: fixed;
    /* 헤더 높이 만큼 내려가서 */
    top: var(--header-height);
    left: 0;
    width: 100%;
    /* 높이가 없으므로 평소에는 안 보이다가 버튼을 클릭하면 보여줄거임 */
    height: 0;
    background-color: var(--color-header);
    transition: .4s;
  }
  /* 나머지 메뉴는 지우고 애플로고랑 장바구니로고만 남겨둘 거임 */
  header ul.menu > li {
    display: none;
  }
  header ul.menu > li.menu-starter,
  header ul.menu > li.apple-logo,
  header ul.menu > li.basket-starter {
    /* 우리가 header ul.menu > li에 적용한 건 block이 아니라 flex이므로 */
    display: flex;
  } 
  header ul.menu > li.menu-starter span {
    /* span은 inline 요소이므로 바꿔줘야 한다. */
    display: block;
    /* 이렇게 하면 선처럼 출력 됨 */
    width: 15px;
    height: 1px;
    background-color: var(--color-white);
    margin-bottom: 6px;
    transition: .4s;
  }
  header ul.menu > li.menu-starter span:last-child {
    /* 마지막 애도 margin이 적용되면 위아래 정렬이 안 맞으므로 */
    margin-bottom: 0;
  }
  header .search-wrap {
    /* 위 좌우 아래 */
    padding: 0 20px 14px;
    border-bottom: 1px solid var(--color-header);
    box-sizing: border-box;
    top: var(--header-height);
  }
  header .search {
    max-width: 590px;
  }
  header .shadow {
    display: none;
  }
  header .search .textfield {
    border-radius: 10px;
    background-color: #1D1D1D;
    width: 100%;
    transition: .2s;
  }
  header .search .search-closer {
    display: none;
  }
  header .search .search-canceler {
    height: var(--header-height);
    display: flex;
    align-items: center;
    padding: 0 8px;
    color: var(--color-link);
    cursor: pointer;
    position: absolute;
    top: 0;
    right: 0;
    transition: .4s;
    visibility: hidden;
    opacity: 0;
  }
  header .search input,
  header .search .search-icon,
  header .search .autocompletes h3,
  header .search .autocompletes li { 
    transform: translate(0, 0);
  }
  header .search .autocompletes {
    top: 58px;
    padding: 20px 0 20px;
    background-color: transparent;
    visibility: hidden;
    opacity: 0;
    transition: .3s;
    transform: translate(0, -100px);
  }
  header .search .autocompletes ul li {
    border-bottom: 1px solid var(--color-header);
  }
  header .search .autocompletes ul li:last-child {
    border-bottom: none;
  }
  header .search .autocompletes ul li a {
    /* 위 우 아래 좌 */
    padding: 16px 0 16px 16px;
    color: var(--color-font-middlegray);
  }
  header .search .autocompletes ul li:hover a {
    /* 데스크탑 모드에서 흰색으로 해놨었으니까 초기화 */
    background-color: transparent;
    color: var(--color-link);
  }
  header .clone-menu {
    /* 바로 보여주는 게 아니라 버튼을 클릭해야 보여주는 것이므로 */
    display: block;
    /* block을 줘서 화면에 보일 수 있는 구조는 만들되(원래 None이었으니까,
    자연스러운 애니메이션 처리를 위해 visibiltiy랑 opacity를 조절 */
    visibility: hidden;
    opacity: 0;
    /* 부모는 .inner이므로 posr 괜찮음 */
    position: absolute;
    top: 103px;
    left: 0;
    /* posa를 쓰면 가로너비가 최대한 줄어들려고 노력하므로 100%를 줘야 한다. */
    width: 100%;
    padding: 0 20px;
    box-sizing: border-box;
    transition: .4s;
    transform: translate(0, -50px);
  }
  header .clone-menu ul {
    max-width: 590px;
    margin: 4px auto;
  }
  header .clone-menu ul li {
    border-bottom: 1px solid var(--color-header);
  }
  header .clone-menu ul li:last-child {
    border-bottom: none;
  }
  header .clone-menu ul li a {
    padding: 16px 0;
    /* inline은 여백 못 가지므로 */
    display: block;
    font-size: 14px;
    color: var(--color-font-middlegray);
  }
  header .clone-menu ul li:hover a {
    color: var(--color-white);
  }
  /* header에 menuing 클래스가 추가되면 */
  header.menuing {
    background-color: var(--color-black);
  }
  /* header에 menuing 클래스가 추가되면, 그때의 before 가상요소가 있으면 */
  header.menuing::before {
    height: 100vh;
    background-color: var(--color-black);
  } 
  header.menuing ul.menu > li.basket-starter {
    opacity: 0;
    visibility: hidden;
  } 
  header.menuing ul.menu > li.menu-starter span:first-child {
    transform: translate(0, 3.5px) rotate(45deg);
  }
  header.menuing ul.menu > li.menu-starter span:last-child {
    transform: translate(0, -3.5px) rotate(-45deg);
  }
  /* 검색창도 보여지게 하기 위해서 */
  header.menuing .search-wrap {
    visibility: visible;
    opacity: 1;
  }
  header.menuing .clone-menu {
    visibility: visible;
    opacity: 1;
    transform: translate(0, 0);
  }
  header.menuing.searching--mobile {
    /* header 자체를 위로 올려줄거임. */
    /* 이렇게 전환효과를 줄거면 자연스러워지기 위해 header에 transition을 줘야 함. */
    transform: translate(0, -30px);
  }
  header.menuing.searching--mobile .search .textfield {
    /* 검색창 너비에서 취소 버튼 만큼 제거해서 겹치지 않도록 */
    width: calc(100% - 55px);
  }
  header.menuing.searching--mobile .search .autocompletes {
    visibility: visible;
    opacity: 1;
    transform: translate(0, 0);
  }
  header.menuing.searching--mobile .search .search-canceler {
    visibility: visible;
    opacity: 1;
  }
  header.menuing.searching--mobile .clone-menu {
    visibility: hidden;
    opacity: 0;
    /* 아래로(y축은 양수가 아래로) 자연스럽게 사라지도록 */
    transform: translate(0, 100px);
  }
}

/* =============== NAVIGATION =============== */
nav {
  /* blur 처리를 해야 하므로 투명도를 넣어야 한다. */
  background-color: rgba(255, 255, 255, 0.7);
  backdrop-filter: blur(20px);
  border-bottom: 1px solid var(--color-border);
  /* 현재 nav 태그의 부모는 body 태그이므로, 항상 위에 붙을 수 있음. */
  position: sticky;
  top: 0;
  /* nav가 항상 위에 있어야 하므로 */
  z-index: 8;

  --nav-height: 52px;
}
nav .inner {
  max-width: 1000px;
  height: var(--nav-height);
  /* .inner 내부 요소 가로 정렬 */
  display: flex;
  /* 교차축(현재 세로) 정렬 */
  align-items: center;
}
nav h1 {
  /* h1은 최대한 늘어나야 하므로(나머지 애들을 우측으로 밀어냄) 기본값이 0인데 1을 할당 */
  flex-grow: 1;
  font-size: 22px;
  font-weight: 500;
}
nav .menu {
  /* .menu 내부 요소(li) 가로 정렬 */
  display: flex;
  /* menu 안에 있는 li들이 서로 간격을 갖도록 */
  gap: 12px;
  /* 외부 여백을 줘서 button과의 거리 간격 갖도록 */
  margin-right: 18px;
}
nav .menu li a {
  display: block;
  /* a 태그는 margin/padding 못 쓰므로 block으로 해줘야 한다. */
  padding: 6px;
  font-size: 11px;
}
nav .menu li:hover a {
  color: var(--color-link);
}
/* 현재 선택된 페이지라는 의미로 */
nav .menu li.active a {
  opacity: 0.5;
  cursor: default;
}
/* 현재 선택된 페이지는 마우스를 갖다대도 글자색상 변하면 안 된다. */
nav .menu li.active:hover a {
  color: var(--color-font);
}

@media (max-width: 740px) {
  nav .shadow {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background-color: var(--color-shadow);
    visibility: hidden;
    opacity: 0;
    transition: .4s;
  }
  nav .contents-bg {
    /* 부모인 nav는 pos sticky 있으므로 괜찮음 */
    position: absolute;
    top: 0;
    left: 0;
    /* posa 썼을 때 줄여들려고 할테니까 */
    width: 100%;
    height: var(--nav-height);
    border-bottom: 1px solid var(--color-border);
    background-color: var(--color-white);
    visibility: hidden;
    transition: .4s;
  }
  nav .menu-toggler {
    width: 30px;
    height: 24px;
    margin-right: 10px;
    cursor: pointer;
    position: relative;
  }
  nav .menu-toggler::before,
  nav .menu-toggler::after {
    content: "";
    display: block;
    width: 11px;
    height: 1px;
    background-color: var(--color-font-darkgray);
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    /* 상하좌우 0 주고 margin: auto 주면 가운데에 배치됨 */
    margin: auto;
    /* 토글 버튼 누르면 v에서 ㅅ으로 변경되는 애니메이션 추가할 것이므로 */
    transition: .4s;
  }
  nav .menu-toggler::before {
    transform: rotate(40deg);  
    left: -9px;
  }
  nav .menu-toggler::after {
    transform: rotate(-40deg);  
    right: -9px;
  }
  nav .menu {
    /* 버튼을 누르면 다시 보여줄꺼니까 display는 건드리지 않는다. */
    visibility: hidden;
    opacity: 0;
    /* 모바일에서는 높이만큼 하단으로 내려서 보여줄 거니까 */
    position: absolute;
    top: var(--nav-height);
    left: 0;
    /* posa는 줄어드려고 하므로 100%를 줘야 한다. */
    width: 100%;
    /* 내부여백 : 위 좌우 아래 */
    padding: 10px 40px 30px;
    /* 내부여백 늘어난 만큼 크기가 커지지 않도록 */
    box-sizing: border-box;
    /* 데스크탑 모드에서는 flex를 줘서 가로정렬했는데, 여기서는 세로 정렬할거임. 
    이때는 그냥 block을 주면 세로정렬이므로 */
    display: block;
    /* 아래에서 위로 나타나는 애니메이션을 위해 */
    transform: translate(0, -50px);
    transition: .4s;
  }
  nav .menu li {
    border-bottom: 1px solid var(--color-border);
  }
  nav .menu li:last-child {
    border-bottom: none;
  }
  nav .menu li a {
    /* 위아래 좌우 */
    padding: 16px 0;
    font-size: 14px;
  }
  nav.menuing .shadow {
    visibility: visible;
    opacity: 1;
  }
  nav.menuing .contents-bg {
    visibility: visible;
    height: 232px;
  }
  nav.menuing .menu {
    visibility: visible;
    opacity: 1;
    transform: translate(0, 0);
  }
  nav.menuing .menu-toggler::before {
    transform: rotate(-40deg);  
  }
  nav.menuing .menu-toggler::after {
    transform: rotate(40deg);  
  }
}

/* =============== MAIN =============== */
main {
  /* main 태그는 block 요소이므로 최대한 늘어나되, 넘치는 부분은 hidden 처리 */
  overflow-x: hidden;
}

/* =============== HERO =============== */
.hero {
  background-color: var(--color-section);
}
.hero .inner {
  padding-bottom: 110px;
}
.hero h1 {
  width: 221px;
  height: 91px;
  /* iPad 텍스트 대신 이미지를 삽입할 것임 */
  background-image: url("../images/hero_ipad_text.png");
  position: absolute;
  /* posa에서 무조건 top/left 이런거 안 쓰고 이동함수만 써도 된다. */
  transform: translate(624px, 235px);
  /* 배경보다 글자가 위에 올라와야 하므로 */
  z-index: 1;
}
.hero .figures {
  height: 808px;
}
.hero figure {
  /* 이동함수 : translate(x, y) */
  transform: translate(74px, -64px);
}
.hero figure figcaption .caption-camera {
  transform: translate(43px, 580px);
  background-image: url("../images/hero_ipad_caption_camera.png");
  /* 배경이미지를 넣었으면 이미지 파일만큼 크기를 넣어줘야 함 */
  width: 120px;
  height: 84px;
}
.hero figure figcaption .caption-chip {
  transform: translate(589px, 510px);
  background-image: url("../images/hero_ipad_caption_chip.png");
  width: 95px;
  height: 43px;
}
.hero figure figcaption .caption-storage {
  transform: translate(627px, 631px);
  background-image: url("../images/hero_ipad_caption_storage.png");
  width: 80px;
  height: 43px;
}
.hero h2 {
  width: 738px;
  height: 145px;
  /* 가운데 정렬 */
  margin: 0 auto;
  background-image: url("../images/hero_headline.png");
}
.hero p.pricing {
  margin-top: 40px;
  font-size: 24px;
  font-weight: 600;
  text-align: center;
}
.hero p.description {
  /* .inner의 너비 안에서 88%를 차지하면서 가운데 정렬됨 */
  /* 글자 줄바꿈을 하려는 건데, 단순히 <br> 태그를 사용해도 되지만 이렇게 영역을 제한해서 줄바꿈을 의도할 수도 있다. */
  /* 88%로 잡으면 "함께할 수 있도록"까지만 작성되고 "디자인되었습니다"는 줄바꿈돼서 작성된다. */
  /* 이렇게 하면 br 태그를 여러 개 작성하지 않고도 단순히 % 수치만 변경해서 여러 상황을 대응할 수 있음. */
  width: 88%;
  /* 위 좌우 아래 */
  margin: 18px auto 0;
  font-size: 19px;
  text-align: center;
}
.hero .links {
  margin-top: 30px;
}

@media (max-width: 1000px) {
  .hero .inner {
    /* 110 에서 80으로 줄여준다. */
    padding-bottom: 80px;
  }
  .hero h1 {
    /* 이미지로 글자를 만들었기에 + 그리고 .bgtext에서 background-size를 contain으로 만들었으므로
    contain은 가로세로 중 더 짧은 길이에 맞추므로, 요소 크기가 줄어도 이미지 보존됨. 
    width, height만 조정하면 줄일 수 있음. */
    width: 166px;
    height: 68px;
    /* 줄어든 크기에 맞게 새로운 위치에 배치되어야 함. */
    transform: translate(448px, 165px);
  }
  .hero .figures {
    height: 584px;
    margin-bottom: 14px;
  }
  .hero figure {
    transform: translate(70px, -24px);
  }
  .hero figure img {
    width: 540px;
  }
  .hero figure figcaption .caption-camera {
    /* scale의 기본값은 1 */
    /* figcaption은 가로세로를 조정하기보다는 스케일을 조정할거임. */
    transform: scale(.8) translate(-9px, 524px);
  }
  .hero figure figcaption .caption-chip {
    transform: scale(.8) translate(510px, 422px);
  }
  .hero figure figcaption .caption-storage {
    transform: scale(.8) translate(556px, 556px);
  }
  .hero h2 {
    width: 515px;
    height: 95px;
  }
}

@media (max-width: 740px) {
  .hero .inner {
    padding-top: 40px;
  }
  .hero h1 {
    /* 이제는 이동함수는 안 쓰고 가운데 정렬만 해줄 거임. */
    transform: none;
    /* 그전에는 다른 요소와 상호작용하지 않고 이동하기 위해 posa를 썼지만
    모바일에서는 단순히 위에서 아래로 쌓이는 구조를 만들거임. 
    그러므로 position도 기본값인 static으로 */
    /* 이렇게 원래 상태로 되돌려 놓으려면 기본값을 알아야 한다. */
    position: static;
    /* 위 좌우 아래 */
    margin: 0 auto 40px;
  }
  .hero .figures {
    /* 높이 값도 초기화 */
    height: auto;
    margin-bottom: 100px;
  }
  .hero figure {
    /* 이동함수 사용 안 할 것이므로 */
    transform: none;
  }
  .hero figure img {
    width: 337px;
  }
  .hero figure figcaption .caption-camera {
    width: 180px;
    height: 37px;
    background-image: url("../images/hero_ipad_caption_camera_mobile.png");
    /* 이번에 Scale의 경우 데스크탑 이미지를 모바일에서도 쓰려고 줄이는 게 아니라 새로운 이미지를 쓰는 거니까 
    1로 되돌려 놔야 한다 */
    transform: scale(1) translate(21px, 368px);
  }
  .hero figure figcaption .caption-chip {
    /* 여기는 새로운 이미지가 아니라 기존 데스크탑 이미지를 사용할 것임 */
    transform: scale(.8) translate(248px, 42px);
  }
  .hero figure figcaption .caption-storage {
    transform: scale(.8) translate(288px, 168px);
  }
  .hero h2 {
    /* 다른 이미지 사용할 거임 */
    background-image: url("../images/hero_headline_mobile.png");
    width: 295px;
    height: 185px;
  }
  .hero p.pricing {
    font-size: 20px;
  }
  .hero p.description {
    /* 데스크탑 모드에서는 width: 88%로 썼는데 모바일에서는 초기화해주고 */
    width: auto;
    font-size: 17px;
  }
}

/* =============== POWER =============== */
.power {
  margin-top: 110px;
}

/* =============== POWER / MULTIPLE-APPS =============== */
.power .multiple-apps h1 {
  width: 500px;
  height: 280px;
  background-image: url("../images/power_headline.png");
  transform: translate(104px, 0);
}
.power .multiple-apps .figures {
  height: 773px;
}
.power .multiple-apps figcaption {
  width: 138px;
  height: 46px;
  background-image: url("../images/power_multiple_apps_caption.png");
  transform: translate(703px, -47px);
}

/* =============== POWER / ARCADE =============== */
.power .arcade {
  margin-top: 55px;
}
.power .arcade .figures {
  height: 600px;
}
.power .arcade figure {
  transform: translate(-347px, -90px);
}
.power .arcade figcaption {
  width: 150px;
  height: 77px;
  background-image: url("../images/power_arcade_caption.png");
  transform: translate(483px, 653px);
}

/* =============== POWER / CREATE =============== */
.power .create {
  margin-top: 55px;
}
.power .create .figures {
  height: 772px;
}
.power .create figure {
  transform: translate(-25px, 50px);
}
.power .create figcaption {
  background-image: url("../images/power_create_caption.png");
  width: 142px;
  height: 46px;
  transform: translate(543px, 908px);
}

@media (max-width: 1000px) {
  .power {
    margin-top: 80px;
  }
  .power .multiple-apps h1 {
    width: 310px;
    height: 180px;
  }
  .power .multiple-apps .figures {
    height: 503px;
  }
  .power .multiple-apps figure {
    transform: translate(71px, 0);
  }
  .power .multiple-apps figure img {
    width: 682px;
  }
  .power .multiple-apps figcaption {
    transform: scale(.8) translate(532px, -58px);
  }
  .power .arcade {
    margin-top: 0;
  }
  .power .arcade .figures {
    height: 480px;
  }
  .power .arcade figure {
    transform: translate(-182px, -6px);
  }
  .power .arcade figure img {
    width: 676px;
  }
  .power .arcade figcaption {
    transform: scale(.8) translate(316px, 528px);
  }
  .power .create .figures {
    height: 588px;
  }
  .power .create figure {
    transform: translate(4px, -36px);
  }
  .power .create figure img {
    width: 820px;
  }
  .power .create figcaption {
    transform: scale(.8) translate(420px, 747px);
  }
}

@media (max-width: 740px) {
  .power .multiple-apps h1 {
    margin: 0 auto;
    transform: none;
  }
  .power .multiple-apps .figures {
    height: 340px;
    margin-top: 50px;
  }
  .power .multiple-apps figure {
    transform: translate(20px, 0);
  }
  .power .multiple-apps figure img {
    width: 462px;
  }
  .power .multiple-apps figcaption {
    transform: scale(.8) translate(112px, -45px);
  }
  .power .arcade {
    /* 태블릿모드에서는 초기화했는데, 
    모바일에서는 수직으로 다 쌓이다 보니까 외부 여백이 필요함 */
    margin-top: 30px;
  }
  .power .arcade .figures {
    /* 초기화 => 브라우저가 크기만큼 자동으로 계산해줌 */
    height: auto;
    margin-top: 20px;
    /* 기본값이 0인데 1을 줘서 순서를 밀어서 
    이미지 설명 이미지 설명 이런 순서가 되도록 함 */
    order: 1;
  }
  .power .arcade figure {
    transform: translate(20px, 0);
  }
  .power .arcade figure img {
    width: 458px;
  }
  .power .arcade figcaption {
    transform: scale(.8) translate(316px, 368px);
  }
  .power .create .figures {
    height: auto;
    margin-top: 20px;
  }
  .power .create figure {
    transform: translate(100px, 0);
  }
  .power .create figure img {
    width: 525px;
  }
  .power .create figcaption {
    transform: scale(.8) translate(254px, 486px);
  }
}

/* =============== DISPLAY =============== */
.display {
  margin-top: 450px;
}
/* =============== DISPLAY / NOTES =============== */
.display .notes h1 {
  background-image: url("../images/display_headline.png");
  width: 630px;
  height: 370px;
  transform: translate(104px, 0);
}
.display .notes .figures {
  height: 814px;
  margin-top: 26px;
}
.display .notes figcaption {
  background-image: url("../images/display_notes_caption.png");
  width: 145px;
  height: 45px;
  transform: translate(707px, -16px);
}
/* =============== DISPLAY / SHAREPLAY =============== */
.display .shareplay {
  margin-top: 55px;
}
.display .shareplay .figures {
  height: 630px;
}
.display .shareplay figure {
  transform: translate(-360px, 0);
}
.display .shareplay figcaption {
  background-image: url("../images/display_shareplay_caption.png");
  width: 110px;
  height: 48px;
  transform: translate(300px, 658px);
}

@media (max-width: 1000px) {
  .display {
    margin-top: 180px;
  }
  .display .notes h1 {
    width: 400px;
    height: 240px;
    transform: translate(120px, 0);
  }
  .display .notes .figures {
    height: 530px;
  }
  .display .notes figure {
    transform: translate(80px, -10px);
  }
  .display .notes figure img {
    width: 676px;
  }
  .display .notes figcaption {
    transform: scale(.8) translate(540px, -34px);
  }
  .display .shareplay .figures {
    height: 330px;
  }
  .display .shareplay figure {
    transform: translate(-178px, 0);
  }
  .display .shareplay figure img {
    width: 682px;
  }
  .display .shareplay figcaption {
    transform: scale(.8) translate(261px, 540px);
  }
}

@media (max-width: 740px) {
  .display .notes h1 {
    background-image: url("../images/display_headline_mobile.png");
    width: 290px;
    height: 308px;
    transform: none;
    margin: 0 auto;
  }
  .display .notes .figures {
    height: auto;
    margin-top: 60px;
  }
  .display .notes figure {
    transform: translate(20px, 0);
  }
  .display .notes figure img {
    width: 458px;
  }
  .display .notes figcaption {
    transform: scale(.8) translate(220px, -45px);
  }
  .display .shareplay {
    margin-top: 30px;
  }
  .display .shareplay .figures {
    height: auto;
    order: 1;
  }
  .display .shareplay figure {
    transform: translate(20px, 0);
  }
  .display .shareplay figure img {
    width: 460px;
  }
  .display .shareplay figcaption {
    transform: scale(.8) translate(261px, 358px);
  }
}

/* =============== CAMERA =============== */
.camera {
  /* margin은 외부 여백 */
  margin-top: 303px;
}

/* =============== CAMERA / STAGE =============== */
.camera .stage {
  position: relative;
}
.camera .stage h1 {
  width: 650px;
  height: 450px;
  background-image: url("../images/camera_headline.png");
  transform: translate(-25px, 0);
}
.camera .stage .info {
  /* .info의 부모 요소는 .stage */
  position: absolute;
  top: 150px;
  right: 0;
}
.camera .stage .figures {
  height: 770px;
  margin-top: 24px;
}
.camera .stage figure {
  transform: translate(90px, 0);
}
.camera .stage video {
  /* 부모 요소는 figure인데 figure는 공통 스타일에 pos 값이 적용되어 있으므로 */
  position: absolute;
  top: 36px;
  left: 76px;
  -webkit-mask-image: url("../images/camera_video_mask.png");
  mask-image: url("../images/camera_video_mask.png");
}
.camera .stage .controller--play,
.camera .stage .controller--pause {
  color: var(--color-link);
  cursor: pointer;
  /* 재생(일시정지) 글자와 img 태그가 수평 정렬되도록 */
  display: flex;
  align-items: center;
  gap: 8px;
  /* translate 이동함수에다가 rotate으로 약간 회전까지 */
  transform: translate(428px, -134px) rotate(-3deg);
}
.camera .stage .controller--play:hover,
.camera .stage .controller--pause:hover {
  text-decoration: underline;
}
.camera .stage .controller--play.hide,
.camera .stage .controller--pause.hide {
  display: none;
}
.camera .stage .controller--play img,
.camera .stage .controller--pause img {
  width: 20px;
  margin-top: -2px;
}
.camera .stage figcaption {
  width: 130px;
  height: 110px;
  background-image: url("../images/camera_hardware_caption.png");
  transform: translate(-116px, 383px);
}

/* =============== CAMERA / EDIT =============== */
.camera .edit .figures {
  height: 910px;
}
.camera .edit figure {
  transform: translate(20px, 0);
}
.camera .edit figcaption {
  width: 130px;
  height: 47px;
  background-image: url("../images/camera_edit_caption.png");
  transform: translate(27px, 905px);
}

@media (max-width: 1000px) {
  .camera {
    margin-top: 165px;
  }
  .camera .stage h1 {
    width: 405px;
    height: 270px;
    transform: translate(0, 0);
  }
  .camera .stage .info {
    top: 0;
  }
  .camera .stage .figures {
    height: 500px;
  }
  .camera .stage figure img {
    width: 678px;
  }
  .camera .stage video {
    top: 23px;
    left: 50px;
    transform: scale(.65);
    /* 기본 값은 50% 50%임(즉 가운데를 기준으로 함) */
    transform-origin: 0 0;
  }
  .camera .stage .controller--play,
  .camera .stage .controller--pause {
    transform: translate(276px, -88px) rotate(-3deg);
  }
  .camera .stage figcaption {
    transform: scale(.8) translate(-136px, 306px);
  }
  .camera .edit .figures {
    height: auto;
  }
  .camera .edit figure {
    transform: translate(40px, 0);
  }
  .camera .edit figure img {
    width: 509px;
  }
  .camera .edit figcaption {
    transform: scale(.8) translate(27px, 742px);
  }
}

@media (max-width: 740px) {
  .camera {
    margin-top: 120px;
  }
  .camera .stage h1 {
    background-image: url("../images/camera_headline_mobile.png");
    width: 304px;
    height: 350px;
    margin: 0 auto;
  }
  .camera .stage .info {
    /* 쌓이도록 할 거니까 초기화 */
    position: static;
    margin-top: 30px;
  }
  .camera .stage .figures {
    height: auto;
    margin-top: 64px;
  }
  .camera .stage figure {
    transform: translate(20px, 0);
  }
  .camera .stage figure img {
    width: 450px;
  }
  .camera .stage video {
    transform: scale(.43);
    top: 15px;
    left: 33px;
  }
  .camera .stage .controller--play, 
  .camera .stage .controller--pause {
    transform: translate(169px, -51px) rotate(-3deg);
  }
  .camera .stage figcaption {
    background-image: url("../images/camera_hardware_caption_mobile.png");
    width: 175px;
    height: 43px;
    /* 이미지 자체를 모바일용으로 교체했으므로 비율 1로 초기화 */
    transform: scale(1) translate(110px, -40px);
  }
  .camera .edit .figures {
    margin-top: 30px;
  }
  .camera .edit figure img {
    width: 343px;
  }
  .camera .edit figcaption {
    transform: scale(.8) translate(27px, 502px);
  }
}

/* =============== WIRELESS =============== */
.wireless {
  margin-top: 202px;
}
/* =============== WIRELESS / FACETIME =============== */
.wireless .facetime h1 {
  width: 730px;
  height: 330px;
  background-image: url("../images/wireless_headline.png");
  transform: translate(104px, 0);
}
.wireless .facetime .figures {
  height: 773px;
}
.wireless .facetime figure {
  transform: translate(-68px, 0);
}
.wireless .facetime figcaption {
  width: 139px;
  height: 46px;
  background-image: url("../images/wireless_facetime_caption.png");
  transform: translate(843px, -49px);
}
/* =============== WIRELESS / FILES =============== */
.wireless .files figure {
  transform: translate(34px, -34px);
}
.wireless .files figcaption {
  width: 127px;
  height: 46px;
  background-image: url("../images/wireless_files_caption.png");
  transform: translate(96px, 639px);
}

@media (max-width: 1000px) {
  .wireless {
    margin-top: 140px;
  }
  .wireless .facetime h1 {
    width: 450px;
    height: 200px;
    transform: translate(70px, 0);
  }
  .wireless .facetime .figures {
    height: 530px;
  }
  .wireless .facetime figure {
    transform: translate(0, 0);
  }
  .wireless .facetime figure img {
    width: 769px;
  }
  .wireless .facetime figcaption {
    transform: scale(.8) translate(670px, -60px);
  }
  .wireless .files figure img {
    width: 676px;
  }
  .wireless .files figcaption {
    transform: scale(.8) translate(43px, 520px);
  }
}

@media (max-width: 740px) {
  .wireless {
    margin-top: 120px;
  }
  .wireless .facetime h1 {
    background-image: url("../images/wireless_headline_mobile.png");
    width: 312px;
    height: 223px;
    transform: none;
    margin: 0 auto;
  }
  .wireless .facetime .figures {
    height: auto;
    margin-top: 64px;
  }
  .wireless .facetime figure img {
    width: 490px;
  }
  .wireless .facetime figcaption {
    transform: scale(.8) translate(120px, -45px);
  }
  .wireless .files .figures {
    margin-top: 30px;
  }
  .wireless .files figure {
    transform: translate(20px, 0);
  }
  .wireless .files figure img {
    width: 450px;
  }
  .wireless .files figcaption {
    transform: scale(.8) translate(73px, 355px);
  }
}

/* =============== ACCESSORIES =============== */
.accessories {
  margin-top: 195px;
}
.accessories h1 {
  width: 550px;
  height: 343px;
  background-image: url("../images/accessories_headline.png");
  /* 해당 제목은 단순히 가운데 정렬만 하면 되므로 */
  margin: 0 auto;
}
.accessories .figures {
  height: 1021px;
  margin-top: 34px;
}
.accessories figure {
  transform: translate(-24px, 0);
}
.accessories figcaption .caption-memo {
  width: 169px;
  height: 41px;
  background-image: url("../images/accessories_caption_memo.png");
  transform: translate(790px, -52px);
}
.accessories figcaption .caption-supports {
  width: 200px;
  height: 70px;
  background-image: url("../images/accessories_caption_supports.png");
  transform: translate(163px, 821px);
}
.accessories .infos {
  /* 공통 스타일은 column임. 여기서만 row로 하고 싶으므로 */
  flex-direction: row;
  /* 최대 너비를 초과하면 요소가 아래로 줄바꿈 되도록 */
  flex-wrap: wrap;
  /* 주축에 대한 정렬을 빈 공간을 각 요소가 균등하게 나눠갖도록 */
  justify-content: space-around;
}

@media (max-width: 1000px) {
  .accessories {
    margin-top: 120px;
  }
  .accessories h1 {
    width: 384px;
    height: 243px;
  }
  .accessories .figures {
    height: 700px;
  }
  .accessories figure {
    transform: translate(12px, 0);
  }
  .accessories figure img {
    width: 712px;
  }
  .accessories figcaption .caption-memo {
    transform: scale(.8) translate(677px, -60px);
  }
  .accessories figcaption .caption-supports {
    transform: scale(.8) translate(101px, 650px);
  }
}

@media (max-width: 740px) {
  .accessories h1 {
    width: 300px;
    height: 190px;
  }
  .accessories .figures {
    height: auto;
    margin-top: 64px;
  }
  .accessories figure img {
    width: 380px;
  }
  .accessories figcaption .caption-memo {
    transform: scale(.8) translate(186px, -58px);
  }
  .accessories figcaption .caption-supports {
    background-image: url("../images/accessories_caption_supports_mobile.png");
    width: 160px;
    height: 44px;
    transform: scale(1) translate(31px, 335px);
  }
  .accessories .infos {
    margin-top: 100px;
  }
}

/* =============== iPadOS =============== */
.ipados {
  margin-top: 212px;
}
.ipados h1 {
  width: 530px;
  height: 400px;
  background-image: url("../images/ipados_headline.png");
  margin: 0 auto;
}
.ipados .infos {
  margin-top: 44px;
  /* infos는 주축이 세로이므로, 교차축인 가로를 end로 미뤄서 오른쪽에 위치하도록 함. */
  align-items: flex-end;
}
.ipados .figures {
  height: 782px;
  display: flex;
  /* 영역 확인을 위한 border */
  /* border: 4px solid; */
}
/* > : 자식 선택자 */
.ipados .figures > div {
  /* 영역 확인을 위한 border */
  /* border: 4px solid red; */
  /* 증가너비 비율 기본값이 0인데, 1을 줘서 최대한 늘어나도록 함(부모 너비 전체 차지하도록 함.) */
  flex-grow: 1;
  /* 3개 각각의 div를 기준으로 figure들을 움직일 거라서 */
  position: relative;
}
.ipados .figure-split-view figure {
  /* 원래는 figure의 부모가 .figures였는데, 이번에는 div 태그가 figure의 부모임. posr 추가하기. */
  transform: translate(-205px, -312px);
}
.ipados .figure-split-view figcaption {
  width: 163px;
  height: 53px;
  background-image: url("../images/ipados_split_view_caption.png");
  transform: translate(200px, -38px);
}
.ipados .figure-widgets figure {
  transform: translate(237px, 43px);
}
.ipados .figure-widgets figcaption {
  width: 161px;
  height: 46px;
  background-image: url("../images/ipados_widgets_caption.png");
  transform: translate(257px, 497px);
}
.ipados .figure-quick-note figure {
  transform: translate(-625px, 232px);
}
.ipados .figure-quick-note figcaption {
  width: 82px;
  height: 97px;
  background-image: url("../images/ipados_quick_note_caption.png");
  transform: translate(511px, 470px);
}

@media (max-width: 1000px) {
  .ipados {
    margin-top: 100px;
  }
  .ipados h1 {
    width: 357px;
    height: 274px;
    /* margin: 0 auto를 0으로 */
    margin: 0;
  }
  .ipados .infos {
    /* 음수값을 할당해서 위로 끌어올린다. */
    margin-top: -98px;
  }
  .ipados .figures {
    height: 520px;
  }
  .ipados .figure-split-view figure {
    transform: translate(-17px, -187px);
  }
  .ipados .figure-split-view figure img {
    width: 441px;
  }
  .ipados .figure-split-view figcaption {
    transform: scale(.8) translate(30px, -50px);
  }
  .ipados .figure-widgets figure {
    transform: translate(180px, 3px);
  }
  .ipados .figure-widgets figure img {
    width: 441px;
  }
  .ipados .figure-widgets figcaption {
    transform: scale(.8) translate(152px, 345px);
  }
  .ipados .figure-quick-note figure {
    transform: translate(-346px, 119px);
  }
  .ipados .figure-quick-note figure img {
    width: 333px;
  }
  .ipados .figure-quick-note figcaption {
    transform: scale(.8) translate(350px, 310px);
  }
}

@media (max-width: 740px) {
  .ipados h1 {
    width: 300px;
    height: 227px;
    margin: 0 auto;
  }
  .ipados .infos {
    margin-top: 30px;
  }
  .ipados .figures {
    /* 모바일이므로 flex에서 block으로 해서 수직으로 쌓이도록 */
    display: block;
    height: auto;
  }
  .ipados .figures > div {
    /* 각각 3개의 div는 flex로 해서 가운데 정렬*/
    display: flex;
    justify-content: center;
  }
  .ipados .figure-split-view figure {
    transform: translate(64px, 55px);
  }
  .ipados .figure-split-view figure img {
    width: 370px;
  }
  .ipados .figure-split-view figcaption {
    transform: scale(.8) translate(39px, -55px);
  }
  .ipados .figure-widgets figure {
    transform: translate(-19px, 34px);
  }
  .ipados .figure-widgets figure img {
    width: 375px;
  }
  .ipados .figure-widgets figcaption {
    transform: scale(.8) translate(252px, 287px);
  }
  .ipados .figure-quick-note figure {
    transform: translate(35px, 46px);
  }
  .ipados .figure-quick-note figure img {
    width: 283px;
  }
  .ipados .figure-quick-note figcaption {
    background-image: url("../images/ipados_quick_note_caption_mobile.png");
    width: 76px;
    height: 88px;
    transform: scale(1) translate(-65px, 250px);
  }
}

/* =============== APPS =============== */
.apps {
  margin-top: 368px;
}
.apps h1 {
  width: 500px;
  height: 264px;
  background-image: url("../images/apps_headline.png");
  transform: translate(17px, 0);
}
.apps .infos {
  margin-top: 36px;
  margin-left: 82px;
}
.apps .figures {
  display: flex;
  height: 788px;
}
.apps .figures > div {
  flex-grow: 1;
  position: relative;
}
.apps .figure-masterclass figure {
  transform: translate(578px, -431px);
}
.apps .figure-masterclass figcaption {
  width: 100px;
  height: 25px;
  background-image: url("../images/apps_masterclass_caption.png");
  transform: translate(26px, 690px);
}
.apps .figure-adobe figure {
  transform: translate(-515px, 85px);
}
.apps .figure-adobe figcaption {
  width: 105px;
  height: 24px;
  background-image: url("../images/apps_adobe_caption.png");
  transform: translate(544px, 514px);
}
.apps .figure-fantasian figure {
  transform: translate(-103px, 318px);
}
.apps .figure-fantasian figcaption {
  width: 74px;
  height: 22px;
  background-image: url("../images/apps_fantasian_caption.png");
  transform: translate(24px, 483px);
}
.apps .figure-books figure {
  transform: translate(-133px, -150px);
}
.apps .figure-books figcaption {
  width: 50px;
  height: 27px;
  background-image: url("../images/apps_books_caption.png");
  transform: translate(397px, 707px);
}
.apps .figure-goodnotes figure {
  transform: translate(-93px, 68px);
}
.apps .figure-goodnotes figcaption {
  background-image: url("../images/apps_goodnotes_caption.png");
  transform: translate(24px, 690px);
}

@media (max-width: 1000px) {
  .apps {
    margin-top: 120px;
  }
  .apps h1 {
    width: 390px;
    height: 208px;
    transform: none;
  }
  .apps .infos {
    /* 왼쪽 여백 초기화 */
    margin-left: 0;
  }
  .apps .info {
    max-width: 404px;
  }
  .apps .figures {
    height: 450px;
  }
  .apps .figure-masterclass figure {
    transform: translate(438px, -264px);
  }
  .apps .figure-masterclass figure img {
    width: 330px;
  }
  .apps .figure-masterclass figcaption {
    transform: scale(.8) translate(6px, 480px);
  }
  .apps .figure-adobe figure {
    transform: translate(-230px, 20px);
  }
  .apps .figure-adobe figure img {
    width: 438px;
  }
  .apps .figure-adobe figcaption {
    transform: scale(.8) translate(324px, 355px);
  }
  .apps .figure-fantasian figure {
    transform: translate(-40px, 160px);
  }
  .apps .figure-fantasian figure img {
    width: 438px;
  }
  .apps .figure-fantasian figcaption {
    transform: scale(.8) translate(14px, 339px);
  }
  .apps .figure-books figure {
    transform: translate(43px, -94px);
  }
  .apps .figure-books figure img {
    width: 330px;
  }
  .apps .figure-books figcaption {
    transform: scale(.8) translate(252px, 493px);
  }
  .apps .figure-goodnotes figure {
    transform: translate(3px, 28px);
  }
  .apps .figure-goodnotes figure img {
    width: 346px;
  }
  .apps .figure-goodnotes figcaption {
    transform: scale(.8) translate(5px, 483px);
  }
}

@media (max-width: 740px) {
  .apps h1 {
    width: 320px;
    height: 169px;
    margin: 0 auto;
  }
  .apps .info {
    max-width: none;
  }
  .apps .figures {
    display: block;
    height: auto;
  }
  .apps .figures > div {
    display: flex;
    justify-content: center;
    height: 240px;
  }
  .apps .figure-masterclass figure {
    transform: translate(140px, 40px);
  }
  .apps .figure-masterclass figure img {
    width: 270px;
  }
  .apps .figure-masterclass figcaption {
    transform: scale(.8) translate(29px, 400px);
  }
  .apps .figure-adobe figure {
    transform: translate(-154px, -126px);
  }
  .apps .figure-adobe figure {
    width: 358px;
  }
  .apps .figure-adobe figcaption {
    transform: scale(.8) translate(233px, 295px);
  }
  .apps .figure-fantasian figure {
    transform: translate(19px, -82px);
  }
  .apps .figure-fantasian figure img {
    width: 358px;
  }
  .apps .figure-fantasian figcaption {
    transform: scale(.8) translate(24px, 282px);
  }
  .apps .figure-books figure {
    transform: translate(-100px, -40px);
  }
  .apps .figure-books figure img {
    width: 270px;
  }
  .apps .figure-books figcaption {
    transform: scale(.8) translate(197px, 407px);
  }
  .apps .figure-goodnotes figure {
    transform: translate(132px, -110px);
  }
  .apps .figure-goodnotes figure img {
    width: 286px;
  }
  .apps .figure-goodnotes figcaption {
    transform: scale(.8) translate(24px, -37px);
  }
}

/* =============== PRIVACY =============== */
.privacy {
  margin-top: 238px;
}
.privacy h1 {
  width: 482px;
  height: 237px;
  background-image: url("../images/privacy_headline.png");
  /* h1을 오른쪽으로 밀어넣고 */
  margin-left: auto;
  /* z-index 적용하려고 posr 잡고 */
  position: relative;
  z-index: 1;
  /* .infos와 줄간격을 맞추기 위해 이동함수 사용 */
  transform: translate(57px, 0);
}
.privacy .infos {
  margin-top: 38px;
  align-items: flex-end;
  position: relative;
  z-index: 1;
}
.privacy figure {
  transform: translate(-215px, -500px);
}
.privacy figcaption .caption-apple-id {
  width: 170px;
  height: 26px;
  background-image: url("../images/privacy_caption_apple_id.png");
  transform: translate(195px, -13px);
}
.privacy figcaption .caption-touch-id {
  width: 150px;
  height: 31px;
  background-image: url("../images/privacy_caption_touch_id.png");
  transform: translate(533px, 485px);
}

@media (max-width: 1000px) {
  .privacy {
    margin-top: 120px;
  }
  .privacy h1 {
    width: 368px;
    height: 182px;
    transform: translate(70px, 0);
  }
  .privacy .infos {
    margin-top: 24px;
  }
  .privacy figure {
    transform: translate(-18px, -440px);
  }
  .privacy figure img {
    width: 441px;
  }
  .privacy figcaption .caption-apple-id {
    transform: scale(.8) translate(-22px, -18px);
  }
  .privacy figcaption .caption-touch-id {
    transform: scale(.8) translate(293px, 339px);
  }
}

@media (max-width: 740px) {
  .privacy h1 {
    width: 277px;
    height: 136px;
    transform: none;
    margin: 0 auto;
  }
  .privacy .figures {
    margin-top: 30px;
  }
  .privacy figure {
    transform: translate(20px, 0);
  }
}

/* =============== ACCESSIBILITY =============== */
.accessibility {
  margin-top: 266px;
  margin-bottom: 170px;
}
.accessibility h1 {
  width: 384px;
  height: 270px;
  background-image: url("../images/accessibility_headline.png");
}
.accessibility .infos {
  /* 왼쪽에 배치하므로 따로 적용할 css가 많이 없음. */
  margin-top: 20px;
}
.accessibility figure {
  transform: translate(470px, -620px);
}

@media (max-width: 1000px) {
  .accessibility {
    margin-top: 86px;
    margin-bottom: 120px;
  }
  .accessibility h1 {
    width: 287px;
    height: 205px;
  }
  .accessibility .info {
    max-width: 346px;
  }
  .accessibility figure {
    transform: translate(401px, -504px);
  }
  .accessibility figure img {
    width: 329px;
  }
}

@media (max-width: 740px) {
  .accessibility {
    margin-bottom: 50px;
  }
  .accessibility h1 {
    height: 165px;
    margin: 0 auto;
  }
  .accessibility .info {
    max-width: none;
  }
  .accessibility .figures {
    margin-top: 30px;
  }
  .accessibility figure {
    transform: translate(20px, 0);
  }
}

/* =============== AR =============== */
.ar {
  background-color: var(--color-section);
  /* 내부여백 : 상 중(좌우) 하 */
  padding: 20px 20px 0;
}
/* 아래쪽 여백은 사용하지 않을 것이므로 */
.ar .whitebox {
  padding-bottom: 0;
}
.ar .inner {
  display: flex;
}
.ar .inner > div {
  max-width: 410px;
  margin-top: 60px;
  margin-right: 90px;
}

@media (max-width: 1000px) {
  .ar .image {
    width: 258px;
  }
}

@media (max-width: 740px) {
  .ar .inner {
    flex-direction: column;
    align-items: center;
  }
  .ar .inner > div {
    max-width: none;
    /* 가로너비가 좁으므로 위 좌우는 0 주고 아래쪽만 30px */
    margin: 0 0 30px;
    text-align: center;
  }
  .ar .icon {
    margin: 0 auto 20px;
  }
}

/* =============== ENVIRONMENT =============== */
.environment {
  padding: 20px 20px 0;
  background-color: var(--color-section);
  text-align: center;
}
.environment .icon {
  margin-left: auto;
  margin-right: auto;
}
.environment h1 {
  /* 얘는 여기서만 사용되므로, 따로 색상 변수로 설정하지 않음. */
  color: #03A10E;
}

@media (max-width: 1000px) {
  /* 넣어놨던 br 태그를 안 보이게 */
  .environment p br {
    display: none;
  }
}

/* =============== ACCESSORY SHOP =============== */
.accessory-shop {
  background-color: var(--color-section);
  text-align: center;
}
.accessory-shop .whitebox {
  padding-bottom: 0;
}
.accessory-shop .inner {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.accessory-shop img {
  margin-top: 50px;
}

@media (max-width: 1000px) {
  .accessory-shop img {
    width: 960px;
  }
}

/* =============== TRADE =============== */
.trade {
  padding: 20px 20px 0;
  background-color: var(--color-section);
  text-align: center;
}

@media (max-width: 1000px) {
  .trade p br {
    display: none;
  }
}

/* =============== COMPARE =============== */
.compare {
  /* 위 좌우 아래 */
  padding: 20px 20px 0;
  background-color: var(--color-section);
  text-align: center;
}
.compare .items {
  display: flex;
  /* 주축에 대한 정렬 */
  justify-content: space-around;
  max-width: 940px;
  /* 위 좌우 아래 */
  margin: 68px auto 74px;
}
.compare .item {
  width: 190px;
  padding-bottom: 34px;
  border-bottom: 1px solid var(--color-border);
}
.compare .item .thumbnail {
  height: 214px;
  margin-bottom: 22px;
  /* 이미지들을 가운데 정렬 */
  display: flex;
  justify-content: center;
  /* 교차축인 세로는 아래로 붙도록 */
  align-items: flex-end;
}
.compare .item ul.colors {
  margin-bottom: 30px;
  display: flex;
  justify-content: center;
  gap: 6px;
}
.compare .item ul.colors li {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: lightgray;
  /* box-shadow는 기본적으로 요소 외부에 그림자를 만듦 */
  /* 요소 내부에도 그림자를 만들고 싶으면 inset 키워드를 앞에 붙여주면 된다 */
  box-shadow: inset 1px 1px 3px rgba(0, 0, 0, .1);
}
.compare .item h3.name {
  margin-bottom: 4px;
  font-size: 22px;
}
.compare .item .tagline {
  margin-bottom: 20px;
  font-size: 16px;
}
.compare .item .price {
  margin-bottom: 10px;
  font-size: 14px;
}
.compare .item .btn {
  /* 외부 여백 : 위 좌우 아래 */
  margin: 0 auto 14px;
}
.compare .item a.link {
  font-size: 14px;
}

@media (max-width: 1000px) {
  /* flex는 한줄에 수평으로 다 배치하려고 한다. 
  이를 변경해주기 위해 flex-wrap을 주고 wrap을 
  줘서 특정 길이까지만 가로로 나열되도록 조건을 건다. 
  그리고 한줄에 2개 아이템만 보여줄거임. 
  max-width를 적당히 조절해서 2개만 보여질 수 있게*/
  .compare .items {
    flex-wrap: wrap;
    justify-content: space-between;
    max-width: 500px;
    /* 위 좌우 아래 */
    margin: 68px auto 34px;
  }
}

@media (max-width: 740px) {
  .compare .whitebox {
    max-width: 430px;
  }
  .compare .items {
    max-width: 190px;
  }
  .compare .item {
    border-bottom: none;
  }
  .compare .links {
    padding-top: 40px;
    border-top: 1px solid var(--color-border);
  }
  .compare a.link {
    margin-top: 0;
  }
}

/* =============== FOOTER =============== */
footer {
  background-color: var(--color-section);
}
/* =============== FOOTER / BUYINFO =============== */
footer .buy-info {
  /* 위아래 좌우 */
  padding: 76px 0;
  display: flex;
  justify-content: space-around;
  gap: 20px;
  text-align: center;
}
footer .buy-info .icon {
  width: 56px;
  height: 56px;
  /* 위 좌우 아래 */
  margin: 0 auto 10px;
}
footer .buy-info h3 {
  margin-bottom: 8px;
  font-size: 18px;
  font-weight: 600;
}
footer .buy-info p {
  margin-bottom: 12px;
  font-size: 14px;
}
footer .buy-info a.link {
  font-size: 14px;
}
/* =============== FOOTER / WARNING =============== */
footer .warning {
  /* 내부여백 : 위 좌우 아래 */
  padding: 18px 0 10px;
  border-top: 1px solid var(--color-border);
  border-bottom: 1px solid var(--color-border);
}
footer .warning ol {
  /* rest.css로 기본 스타일 전부 제거했으므로 의도적으로 숫자 붙여줘야 한다. */
  list-style: decimal;
  /* 앞에 숫자를 붙여줄거니까 내부여백으로 좀 밀어 넣어야 함. */
  padding-left: 16px;
}
footer .warning li {
  margin-bottom: 10px;
  font-size: 11px;
  line-height: 1.5;
  color: var(--color-font-darkgray);
}
/* =============== FOOTER / BREADCRUMBS =============== */
footer .breadcrumbs {
  display: flex;
  align-items: center;
  gap: 30px;
  margin: 20px 0;
}
footer .breadcrumbs a {
  font-size: 12px;
  color: var(--color-font-darkgray);
  position: relative;
}
footer .breadcrumbs a.apple-logo {
  width: 16px;
  height: 16px;
  background-image: url("../images/path_apple.svg");
}
footer .breadcrumbs a:hover {
  text-decoration: underline;
}
footer .breadcrumbs a::after {
  /* content: "" 는 가상 요소를 만들고 내용을 비워놓는 것과 같음 */
  /* <></> */
  content: "";
  width: 8px;
  height: 18px;
  background-image: url("../images/path_div.svg");
  /* 가상 클래스의 부모 요소는 앞에 붙은 a가 되므로 posr 붙여줘야 함 */
  position: absolute;
  top: 0;
  bottom: 0;
  right: -18px;
  margin: auto;
}
footer .breadcrumbs a:last-child:after {
  display: none;
}
/* =============== FOOTER / NAVIGATIONS =============== */
footer .navigations {
  margin-bottom: 40px;
  height: 344px;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  align-content: space-between;
}
footer .navigations .map {
  margin-top: 24px;
}
/* 교육 탭 */
footer .navigations .map:nth-child(6) {
  padding-bottom: 100px;
}
footer .navigations .map h3 {
  font-size: 12px;
  font-weight: 600;
}
footer .navigations .map h3 .icon {
  display: none;
}
footer .navigations .map li {
  margin-top: 12px;
  font-size: 12px;
}
footer .navigations .map li a {
  color: var(--color-font-darkgray);
}
footer .navigations .map li a:hover {
  text-decoration: underline;
}
/* =============== FOOTER / 기타 정보 =============== */
footer .how-to-shop {
  font-size: 12px;
  line-height: 1.4;
  color: var(--color-font-darkgray);
}
footer .how-to-shop a {
  color: var(--color-link);
}
footer .how-to-shop a:hover {
  text-decoration: underline;
}
footer .legal {
  margin-top: 10px;
  padding: 10px 0 40px;
  border-top: 1px solid var(--color-border);
  display: flex;
  gap: 50px;
  font-size: 12px;
  color: var(--color-font-darkgray);
}
footer .legal ul {
  display: flex;
  flex-grow: 1;
  gap: 21px;
}
footer .legal ul li {
  position: relative;
}
/* 구분선을 만들기 위해 */
footer .legal ul li::after {
  content: "|";
  /* 여기 가상요소의 부모는 li임 */
  position: absolute;
  right: -11px;
  color: var(--color-border);
}
footer .legal ul li:last-child:after {
  display: none;
}
footer .legal ul li:hover a {
  text-decoration: underline;
}

@media (max-width: 1000px) {
  footer .inner {
    max-width: none;
  }
  footer .legal {
    /* 수직으로 쌓을 거라서 */
    flex-direction: column;
    /* 간격도 50에서 10으로 줄이고 */
    gap: 10px;
    padding: 10px 0 30px;
  }
  footer .legal .locale {
    margin-top: 14px;
  }
}

@media (max-width: 740px) {
  footer .buy-info {
    /* 줄바꿈 가능하게 하려고 */
    flex-wrap: wrap;
  }
  footer .navigations {
    /* 수직으로 전부 쌓을거니까 간격도 최대한 줄여야 해서 */
    height: auto;
    /* 수직으로 쌓으려고 */
    display: block;
  }
  footer .navigations .map {
    margin-top: 0;
    border-bottom: 1px solid var(--color-border);
  }
  footer .navigations .map:nth-child(6) {
    /* 레이아웃 맞추려고 간격 엄청 줬던 것도 초기화 */
    padding-bottom: 0;
  }
  footer .navigations .map h3 {
    padding: 12px 0;
    font-weight: 400;
    display: flex;
  }
  footer .navigations .map:hover h3 {
    font-weight: 600;
  }
  footer .navigations .map h3 .text {
    /* h3의 자식으로 .text와 .icon이 있는데 
    .text의 증가비율을 0에서 1로 바꿔주면 최대한 늘어나면서
    .icon이 끝으로 밀려나게 된다. */
    flex-grow: 1;
  }
  footer .navigations .map h3 .icon {
    /* span 태그니까 초기화할 때 block으로 */
    display: block;
    padding: 0 10px;
    color: var(--color-font-darkgray);
  }
  footer .navigations .map ul {
    height: 0;
    overflow: hidden;
    /* 전환 효과를 all이 아니라 개별 속성에 각각 다르게 */
    transition: 
      transform .6s, 
      opacity .4s;
    transform: translate(0, -20px);
    opacity: 0;
  }
  footer .navigations .map.active ul {
    /* 0에서 화면에 보일 수 있는 구조로 */
    height: auto;
    overflow: visible;
    padding: 6px 0 18px;
    transform: translate(0, 0);
    opacity: 1;
  }
  footer .navigations .map.active h3 .icon {
    transform: scale(1.2) rotate(45deg);
  }
  footer .legal ul {
    /* 줄바꿈 가능하도록 */
    flex-wrap: wrap;
    /* 원래 위아래좌우 전부 21에서 => 위아래6 좌우21로 */
    /* 왜냐면 그 전에는 줄바꿈 처리할 필요가 없어서 21만 써도 됐음. */
    gap: 6px 21px;
  }
}

/* =============== Sprite Image =============== */

@keyframes sprite-icon {
  /* 1~10 */
  0.00% {
    background-position: 0 0;
  }
  1.67% {
    background-position: -100px 0;
  }
  3.33% {
    background-position: -200px 0;
  }
  5.00% {
    background-position: -300px 0;
  }
  6.67% {
    background-position: -400px 0;
  }
  8.33% {
    background-position: -500px 0;
  }
  10.00% {
    background-position: 0 -100px;
  }
  11.67% {
    background-position: -100px -100px;
  }
  13.33% {
    background-position: -200px -100px;
  }
  15.00% {
    background-position: -300px -100px;
  }

  /* 11~20 */
  16.67% {
    background-position: -400px -100px;
  }
  18.33% {
    background-position: -500px -100px;
  }
  20.00% {
    background-position: 0 -200px;
  }
  21.67% {
    background-position: -100px -200px;
  }
  23.33% {
    background-position: -200px -200px;
  }
  25.00% {
    background-position: -300px -200px;
  }
  26.67% {
    background-position: -400px -200px;
  }
  28.33% {
    background-position: -500px -200px;
  }
  30.00% {
    background-position: 0 -300px;
  }
  31.67% {
    background-position: -100px -300px;
  }

  /* 21~30 */
  33.33% {
    background-position: -200px -300px;
  }
  35.00% {
    background-position: -300px -300px;
  }
  36.67% {
    background-position: -400px -300px;
  }
  38.33% {
    background-position: -500px -300px;
  }
  40.00% {
    background-position: 0 -400px;
  }
  41.67% {
    background-position: -100px -400px;
  }
  43.33% {
    background-position: -200px -400px;
  }
  45.00% {
    background-position: -300px -400px;
  }
  46.67% {
    background-position: -400px -400px;
  }
  48.33% {
    background-position: -500px -400px;
  }

  /* 31~40 */
  50.00% {
    background-position: 0 -500px;
  }
  51.67% {
    background-position: -100px -500px;
  }
  53.33% {
    background-position: -200px -500px;
  }
  55.00% {
    background-position: -300px -500px;
  }
  56.67% {
    background-position: -400px -500px;
  }
  58.33% {
    background-position: -500px -500px;
  }
  60.00% {
    background-position: 0 -600px;
  }
  61.67% {
    background-position: -100px -600px;
  }
  63.33% {
    background-position: -200px -600px;
  }
  65.00% {
    background-position: -300px -600px;
  }

  /* 41~50 */
  66.67% {
    background-position: -400px -600px;
  }
  68.33% {
    background-position: -500px -600px;
  }
  70.00% {
    background-position: 0 -700px;
  }
  71.67% {
    background-position: -100px -700px;
  }
  73.33% {
    background-position: -200px -700px;
  }
  75.00% {
    background-position: -300px -700px;
  }
  76.67% {
    background-position: -400px -700px;
  }
  78.33% {
    background-position: -500px -700px;
  }
  80.00% {
    background-position: 0 -800px;
  }
  81.67% {
    background-position: -100px -800px;
  }

  /* 51~60 */
  83.33% {
    background-position: -200px -800px;
  }
  85.00% {
    background-position: -300px -800px;
  }
  86.67% {
    background-position: -400px -800px;
  }
  88.33% {
    background-position: -500px -800px;
  }
  90.00% {
    background-position: 0 -900px;
  }
  91.67% {
    background-position: -100px -900px;
  }
  93.33% {
    background-position: -200px -900px;
  }
  95.00% {
    background-position: -300px -900px;
  }
  96.67% {
    background-position: -400px -900px;
  }
  98.33% {
    background-position: -500px -900px;
  }
}
